{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","routes","path","loadChildren","__webpack_require__","then","m","GeoAdresseModule","_constants_route_constant__WEBPACK_IMPORTED_MODULE_0__","UsersModule","redirectTo","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","preloadingStrategy","imports","exports","AppComponent","mobile","test","navigator","userAgent","selectors","decls","vars","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","provide","_angular_common_http__WEBPACK_IMPORTED_MODULE_6__","useClass","_helpers_jwt_interceptor__WEBPACK_IMPORTED_MODULE_4__","multi","_helpers_error_interceptor__WEBPACK_IMPORTED_MODULE_2__","_helpers_fake_backend__WEBPACK_IMPORTED_MODULE_3__","devextreme_angular__WEBPACK_IMPORTED_MODULE_7__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_9__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_10__","declarations","AppBaseRoute","ErrorInterceptor","authService","request","next","handle","pipe","err","indexOf","status","logOut","location","reload","error","message","statusText","_angular_core__WEBPACK_IMPORTED_MODULE_3__","factory","users","id","token","username","password","email","FirstName","LastName","ProfilComplete","role","_models_user__WEBPACK_IMPORTED_MODULE_0__","FakeBackendInterceptor","url","method","headers","body","handleRoute","endsWith","authenticate","createAccount","setUserProfil","emailAlready","getUsers","match","getUserById","user","find","x","u","ok","Math","max","map","push","Position","entreprise","isAdmin","unauthorized","isLoggedIn","currentUser","idFromUrl","authHeader","get","startsWith","parseInt","split","urlParts","length","JwtInterceptor","currentUserValue","isApiUrl","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","clone","setHeaders","Authorization","_angular_core__WEBPACK_IMPORTED_MODULE_2__","User","Entreprise","Role","AuthService","router","http","currentUserSubject","rxjs__WEBPACK_IMPORTED_MODULE_1__","JSON","parse","localStorage","getItem","asObservable","value","isAuthenticated","idToken","post","setItem","stringify","confirmedPassword","already","recoveryCode","console","log","isOk","removeItem","navigate","_angular_core__WEBPACK_IMPORTED_MODULE_4__","providedIn","environment","production","backendUrl","backendBaseUrl","apiUrl","tileUrl","mapbox","accessToken","style","version","sources","type","tiles","tileSize","maxzoom","layers","source","maptiler","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/constants/route.constant.ts","webpack:///src/app/helpers/error.interceptor.ts","webpack:///src/app/helpers/fake-backend.ts","webpack:///src/app/helpers/jwt.interceptor.ts","webpack:///src/app/models/user.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { AppBaseRoute } from './constants/route.constant';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./geo-adresse/geo-adresse.module').then(\n        (m) => m.GeoAdresseModule\n      ),\n  },\n  {\n    path: AppBaseRoute.USER,\n    loadChildren: () =>\n      import('./users/users.module').then((m) => m.UsersModule),\n  },\n\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Geo-adresse';\n  mobile: boolean = false;\n\n  constructor() {\n    this.mobile =\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(\n        navigator.userAgent\n      );\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DxButtonModule } from 'devextreme-angular';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { FakeBackendInterceptor } from './helpers/fake-backend';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    HttpClientModule,\n    DxButtonModule,\n    BrowserModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: FakeBackendInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export enum AppBaseRoute {\n  USER = 'user',\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { AuthService } from '../services/auth.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if ([401, 403].indexOf(err.status) !== -1) {\n          // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n          this.authService.logOut();\n          location.reload();\n        }\n\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\nimport { Role, User } from '../models/user';\n\nconst users: User[] = [\n  {\n    id: 1,\n    token: null,\n    username: 'admin',\n    password: 'admin',\n    email: 'admin@rh-projet.com',\n    FirstName: 'ADMIN',\n    LastName: 'Demo',\n    ProfilComplete: true,\n    role: Role.Admin,\n  },\n  {\n    id: 2,\n    token: null,\n    username: 'user',\n    password: 'user',\n    email: 'user@rh-projet.com',\n    FirstName: 'NORMAL',\n    LastName: 'Demo',\n    ProfilComplete: true,\n    role: Role.User,\n  },\n];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const { url, method, headers, body } = request;\n\n    // wrap in delayed observable to simulate server api call\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n      .pipe(delay(500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith('/users/authenticate') && method === 'POST':\n          return authenticate();\n        case url.endsWith('/users/signup') && method === 'POST':\n          return createAccount();\n        case url.endsWith('/users/set-user-profil') && method === 'POST':\n          return setUserProfil();\n        case url.endsWith('/users/email-already') && method === 'POST':\n          return emailAlready();\n        case url.endsWith('/users') && method === 'GET':\n          return getUsers();\n        case url.match(/\\/users\\/\\d+$/) && method === 'GET':\n          return getUserById();\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n    function authenticate() {\n      const { email, password } = body;\n      const user = users.find(\n        (x) => x.email === email && x.password === password\n      );\n      if (!user) return error('Email or password is incorrect');\n      let u = { ...user };\n      u.token = `fake-jwt-token.${user.id}`;\n      return ok(u);\n    }\n\n    function createAccount() {\n      const { email, password } = body;\n      let user: User = {\n        id: Math.max(...users.map((u) => u.id)) + 1,\n        token: null,\n        username: null,\n        password: password,\n        email: email,\n        FirstName: null,\n        LastName: null,\n        ProfilComplete: false,\n        role: Role.User,\n      };\n      users.push(user);\n\n      return ok(user);\n    }\n\n    function setUserProfil() {\n      const { email } = body;\n      let user: User = users.find((x) => x.email === email);\n      if (!user) return error('User not exist');\n      user.FirstName = body.FirstName;\n      user.LastName = body.LastName;\n      user.Position = body.Position;\n      user.ProfilComplete = body.ProfilComplete;\n      user.entreprise = body.entreprise;\n\n      let u: User = { ...user };\n      u.token = `fake-jwt-token.${user.id}`;\n      return ok(u);\n    }\n\n    function emailAlready() {\n      const { email } = body;\n      const user = users.find((x) => x.email === email);\n      if (user) return ok(true);\n      else return ok(false);\n    }\n\n    function getUsers() {\n      if (!isAdmin()) return unauthorized();\n      return ok(users);\n    }\n\n    function getUserById() {\n      if (!isLoggedIn()) return unauthorized();\n\n      // only admins can access other user records\n      if (!isAdmin() && currentUser().id !== idFromUrl()) return unauthorized();\n\n      const user = users.find((x) => x.id === idFromUrl());\n      return ok(user);\n    }\n\n    // helper functions\n    function ok(body) {\n      return of(new HttpResponse({ status: 200, body }));\n    }\n\n    function unauthorized() {\n      return throwError({ status: 401, error: { message: 'unauthorized' } });\n    }\n\n    function error(message) {\n      return throwError({ status: 400, error: { message } });\n    }\n\n    function isLoggedIn() {\n      const authHeader = headers.get('Authorization') || '';\n      return authHeader.startsWith('Bearer fake-jwt-token');\n    }\n\n    function isAdmin() {\n      return isLoggedIn() && currentUser().role === Role.Admin;\n    }\n\n    function currentUser() {\n      if (!isLoggedIn()) return;\n      const id = parseInt(headers.get('Authorization').split('.')[1]);\n      return users.find((x) => x.id === id);\n    }\n\n    function idFromUrl() {\n      const urlParts = url.split('/');\n      return parseInt(urlParts[urlParts.length - 1]);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // add auth header with jwt if user is logged in and request is to api url\n    const currentUser = this.authService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    if (isLoggedIn && isApiUrl) {\n      request = request.clone({\n        setHeaders: { Authorization: `Bearer ${currentUser.token}` },\n      });\n    }\n    return next.handle(request);\n  }\n}\n","export class User {\n  id: number;\n  token: string;\n  username: string;\n  password: string;\n  email: string;\n  FirstName: string;\n  LastName: string;\n  Position?: string;\n  ProfilComplete: boolean;\n  role: Role;\n  entreprise?: Entreprise;\n}\n\nexport class Entreprise {\n  name: string;\n  nbEmplyees?: number;\n}\n\nexport enum Role {\n  User = 'User',\n  Admin = 'Admin',\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  get isAuthenticated(): boolean {\n    return !!this.currentUserSubject.value;\n  }\n\n  constructor(private router: Router, private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(\n      JSON.parse(localStorage.getItem('currentUser'))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  isTokenExpired(): boolean {\n    if (this.isAuthenticated) {\n      const idToken = this.currentUserValue.token;\n      if (idToken !== null) {\n        return true; // this.jwtHelperService.isTokenExpired(idToken, expirationTokenOffsetSeconds);\n      }\n    }\n    return false;\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/users/authenticate`, {\n        email,\n        password,\n      })\n      .pipe(\n        map((user: User) => {\n          // login successful if there's a jwt token in the response\n          if (user && user.token && user.ProfilComplete) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            this.currentUserSubject.next(user);\n          }\n\n          return user;\n        })\n      );\n  }\n\n  setUserProfil(user: User) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/users/set-user-profil`, user)\n      .pipe(\n        map((user: User) => {\n          // login successful if there's a jwt token in the response\n          if (user && user.token && user.ProfilComplete) {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            this.currentUserSubject.next(user);\n          }\n\n          return user;\n        })\n      );\n  }\n\n  signup(email: string, password: string, confirmedPassword: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/users/signup`, {\n        email,\n        password,\n        confirmedPassword,\n      })\n      .pipe(\n        map((user) => {\n          // signup successful\n          return user;\n        })\n      );\n  }\n\n  emailAlready(email: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/users/email-already`, { email })\n      .pipe(\n        map((already) => {\n          return already;\n        })\n      );\n  }\n\n  async changePassword(email: string, recoveryCode: string) {\n    try {\n      // Send request\n      console.log(email, recoveryCode);\n\n      return {\n        isOk: true,\n      };\n    } catch {\n      return {\n        isOk: false,\n        message: 'Failed to change password',\n      };\n    }\n  }\n\n  async resetPassword(email: string) {\n    try {\n      // Send request\n      console.log(email);\n\n      return {\n        isOk: true,\n      };\n    } catch {\n      return {\n        isOk: false,\n        message: 'Failed to reset password',\n      };\n    }\n  }\n\n  logOut() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: '',\n  backendBaseUrl: '',\n  apiUrl: 'http://localhost:4000',\n  /* tileUrl: 'http://localhost:8080', */\n  tileUrl: 'https://data-tuile.timbi-dev.com',\n  mapbox: {\n    accessToken:\n      'pk.eyJ1IjoibW9keXlheWEiLCJhIjoiY2s4ZDdvYTZlMDlzYjNmbWw0cDA0cGMyNCJ9.uP3__gpzLgNDzRGHTCB7LA',\n    style: {\n      version: 8,\n      sources: {\n        'simple-tiles': {\n          type: 'raster',\n          tiles: [\n            'http://a.tile.openstreetmap.org/{z}/{x}/{y}.png',\n            'http://b.tile.openstreetmap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 512,\n          maxzoom: 16,\n        },\n      },\n      layers: [\n        {\n          id: 'simple-tiles',\n          type: 'raster',\n          source: 'simple-tiles',\n        },\n      ],\n    },\n  },\n  maptiler: {\n    token: 'Bya0RvZb1k7wPDgbqQrI',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}